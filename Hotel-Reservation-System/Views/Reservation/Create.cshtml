@model Hotel_Reservation_System.Models.Reservation
    @using Hotel_Reservation_System.Models

@{
    ViewBag.Title = "Create Reservation";
}

<link href="~/Content/css-folder/reservation/create-rre.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@using (Html.BeginForm("Create", "Reservation", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.RoomId)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-horizontal">
    <div class="reservation-header">
        <h2>@Model.Room.Hotel.Name - @Model.Room.Name</h2>
        <hr />
        <h6><b class="star">*</b> required fields to be filled</h6>
    </div>

    <div class="row reservation-area">
        <div class="form-group col-md-4">
            <b class="title">Check-in Date<b class="star"> *</b></b>
            <div class="col-md-10">
                <i class="fa-solid fa-calendar-days"></i>
                @Html.EditorFor(model => model.CheckInDate, new { htmlAttributes = new { @class = "form-control", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd"), id = "checkInDate" } })
                @Html.ValidationMessageFor(model => model.CheckInDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <b class="title">Check-out Date<b class="star"> *</b></b>
            <div class="col-md-10">
                <i class="fa-solid fa-calendar-days"></i>
                @Html.EditorFor(model => model.CheckOutDate, new { htmlAttributes = new { @class = "form-control", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd"), id = "checkOutDate" } })
                @Html.ValidationMessageFor(model => model.CheckOutDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <b class="title">Number Of Guests<b class="star"> *</b></b>
            <div class="col-md-10">
                <i class="fa-solid fa-user"></i>
                @Html.EditorFor(model => model.NumberOfGuests, new { htmlAttributes = new { @class = "form-control", id = "numberOfGuests" } })
                @Html.ValidationMessageFor(model => model.NumberOfGuests, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="validity-date d-flex align-items-start">
        <img src="~/Content/images/icon/calendar-icon.svg" alt="Calendar Icon" class="icon">
        <div class="text-content">
            <p class="title">Expires for full refund: #</p>
            <p class="description">If your plans change, you can change or cancel this stay for a full refund. Because flexibility is important!</p>
        </div>
    </div>

    <h4 class="hotel-details-header">ROOM DETAILS</h4>

    @if (Model.Room != null)
    {
        <div class="hotel-details">
            <img src="@Url.Content(Model.Room.ImageUrl)" alt="@Model.Room.Name" class="hotel-image" />
            <div class="hotel-info">
                <div class="hotel-name-rating">
                    <p class="room-name">
                        <a href="@Url.Action("Details", "Room", new { id = Model.RoomId })">@Model.Room.Name</a>
                    </p>
                    <p class="hotel-name">
                        <a href="@Url.Action("Details", "Hotel", new { id = Model.Room.HotelId })">@Model.Room.Hotel.Name</a>
                    </p>
                </div>
                <p class="room-type">@Model.Room.Type</p>
                <p class="hotel-location"> 📍 @Model.Room.Hotel.Location</p>
                <p class="room-description">@Model.Room.Description</p>
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6 price-info">
                        <p id="pricePerNight"><span id="totalPrice">@Model.Room.PricePerNight</span> ₺</p>
                    </div>
                </div>
                <div class="text-right">
                    <div class="subtitle-info">
                        <p>
                            Price for <span id="nightsCount">1</span> night(s) - <span id="daysCount">2</span> day(s)<br />
                            Taxes and fees included.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <p>Hotel details are not available.</p>
    }



    <div class="form-group btn-group">
        <div class="col-md-offset-2 col-md-12">
            <input type="button" value="Reserve" class="btn btn-reserve" onclick="openPaymentModal()" />
            @Html.ActionLink("Cancel", "Details", "Room", new { id = Model.RoomId }, new { @class = "btn btn-cancel" })
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">

        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel"><i class="fa-solid fa-user"></i> Step 1: Your Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="required-text"><span class="req">*</span> required fields to be filled</p>

                    <p class="title-text">First Name<span class="req">*</span></p>
                    <p class="subtitle-text">Please enter the name of one of the guests staying in this room.</p>
                    <input type="text" name="FirstName" class="form-control input-info" id="FirstName" />

                    <p class="title-text">Last Name<span class="req">*</span></p>
                    <p class="subtitle-text"></p>
                    <input type="text" name="LastName" class="form-control input-info" id="LastName" />

                    <p class="title-text">E-mail Address<span class="req">*</span></p>
                    <p class="subtitle-text">Your confirmation email address.</p>
                    <input type="text" name="Email" class="form-control input-info" id="Email" />

                    <p class="title-text">Phone Number<span class="req">*</span></p>
                    <p class="subtitle-text">Please provide your contact phone number.</p>

                    <input type="text" name="Phone" class="form-control input-info" id="Phone" />

                </div>

                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel"><i class="fa-solid fa-bed"></i> Step 2: Accommodation details</h5>
                </div>
                <div class="modal-body">
                    <p class="facilities-text">Accommodation highlights</p>

                    @{
                        var allFacilities = Enum.GetValues(typeof(FacilityHotel))
                                                 .Cast<FacilityHotel>()
                                                 .Where(facility => facility != FacilityHotel.None && Model.Room.Hotel.Facilities.HasFlag(facility))
                                                 .ToList();

                        var randomFacilities = allFacilities.OrderBy(f => Guid.NewGuid()).Take(4);
                    }
                    <div class="room-facilities">
                        <ul>
                            @foreach (var facility in randomFacilities)
                            {
                                var displayName = FacilityExtensions.GetEnumDisplayNameHotel(facility);
                                var iconClass = FacilityIcons.GetHotelIcon(facility);

                                <li class="facility-area">
                                    @if (!string.IsNullOrEmpty(iconClass))
                                    {
                                        <i class="@iconClass" aria-hidden="true"></i>
                                    }
                                    <span>@displayName</span>
                                </li>
                            }
                        </ul>
                    </div>
                </div>

                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel"><i class="fa-regular fa-credit-card"></i> Step 3: Payment details</h5>
                </div>
                <div class="modal-body">
                    <p class="never-card-fees"><i class="fa-solid fa-circle-check"></i> We <b>never</b> charge any card fees</p>
                    <p class="required-text"><span class="req">*</span> required fields to be filled</p>

                    <input type="hidden" id="modalTotalPriceValue" name="Amount" value="0">

                    <div class="mb-3">
                        <label for="FirstName" class="title-text">First Name<span class="req">*</span></label>
                        <input type="text" name="Payment.FirstName" class="form-control" id="FirstName" />
                    </div>

                    <div class="mb-3">
                        <label for="LastName" class="title-text">Last Name<span class="req">*</span></label>
                        <input type="text" name="Payment.LastName" class="form-control" id="LastName" />
                    </div>

                    <div class="mb-3">
                        <label for="CardNumber" class="title-text">Card Number<span class="req">*</span></label>
                        <input type="text" name="Payment.CardNumber" class="form-control" id="CardNumber" placeholder="0000 0000 0000 0000" maxlength="19" />
                    </div>
                    <div class="mb-3">
                        <label for="ExpirationDate" class="title-text">Expiration Date<span class="req">*</span></label>
                        <div class="d-flex gap-2">
                            <input type="text" name="Month" class="form-control expiration-input" id="ExpirationMonth" placeholder="MM" maxlength="2" /> <p class="slash">/</p>
                            <input type="text" name="Year" class="form-control expiration-input" id="ExpirationYear" placeholder="YY" maxlength="2" />
                        </div>
                        <input type="hidden" name="Payment.ExpirationDate" id="ExpirationDate" />
                    </div>

                    <div class="mb-3">
                        <label for="CVV" class="title-text">CVV<span class="req">*</span></label>
                        <div class="d-flex align-items-center">
                            <input type="text" name="Payment.CVV" class="form-control input-cvv" id="CVV" placeholder="123" maxlength="4" />
                            <button type="button" class="btn btn-info ms-2" data-bs-toggle="tooltip" data-bs-placement="top" title="CVV (Card Verification Value) is a 3 or 4 digit security code located on the back of your credit or debit card.">
                                <i class="fa-regular fa-circle-question"></i>
                            </button>
                        </div>
                    </div>



                </div>

                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel"><i class="fa-solid fa-user-shield"></i> Cancellation policy</h5>
                </div>
                <div class="modal-body">

                </div>

                <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel"><i class="fa-solid fa-circle-check"></i> Confirm payment</h5>
                </div>
                <div class="modal-body">

                    <p class="last-step">You're so close! This is the last step.</p>

                    <div class="checkdate-details">
                        <div class="col-md-3">
                            <p class="check-date-text">Check-in Date :</p>
                        </div>
                        <div class="col-md-3 check-date">
                            <span id="modalCheckInDate">N/A</span>
                        </div>
                        <div class="col-md-3">
                            <p class="check-date-text">Check-out Date :</p>
                        </div>
                        <div class="col-md-3 check-date">
                            <span id="modalCheckOutDate">N/A</span>
                        </div>
                    </div>

                    <div class="nights-days-wrapper">
                        <div class="nights-days-count">
                            <span id="modalNightsCount">0</span> Nights - <span id="modalDaysCount">0</span> Days
                        </div>
                    </div>


                    <div class="totalprice-details">

                        <div class="col-md-3 ">
                            <p class="text">Total Price</p>
                        </div>
                        <div class="col-md-3">
                            <div class="total-price">
                                <span id="modalTotalPrice">0</span> TRY
                            </div>
                        </div>
                        <div class="col-md-3 ">
                        </div>
                        <div class="col-md-3 ">
                        </div>
                    </div>

                    <hr />

                    <p class="pay-back"><i class="fa-solid fa-circle-check"></i> Full refund if plans change</p>

                    <p class="booking-conditions-title">Booking Conditions</p>
                    <p class="booking-conditions-desc">By clicking “Confirm purchase” you confirm that you have read and agreed to our <a href="#">Terms and Conditions<i class="fa-regular fa-copy"></i></a> , <a href="#">Privacy Policy<i class="fa-regular fa-copy"></i></a> and <a href="#">Official Travel Advisories<i class="fa-regular fa-copy"></i>.</a></p>
                    <button type="submit" class="btn btn-success"><i class="fa-solid fa-lock"></i> Confirm purchase</button>

                </div>

            </div>
        </div>
    </div>


</div>
}



<script>

    const pricePerNight = parseFloat(document.getElementById("pricePerNight").innerText) || 0;

    // Calculate Check In-Out Day and Night
    document.getElementById("checkInDate").addEventListener("change", calculateNights);
    document.getElementById("checkOutDate").addEventListener("change", calculateNights);
    document.getElementById("numberOfGuests").addEventListener("input", calculateTotalPrice);

    function calculateNights() {
        const checkInDate = new Date(document.getElementById("checkInDate").value);
        const checkOutDate = new Date(document.getElementById("checkOutDate").value);

        if (checkInDate && checkOutDate && checkOutDate > checkInDate) {
            const timeDiff = checkOutDate - checkInDate;
            const nights = Math.ceil(timeDiff / (1000 * 3600 * 24));
            document.getElementById("nightsCount").textContent = nights;
            document.getElementById("daysCount").textContent = nights + 1;
            document.getElementById("numberOfNights").style.display = "block";
            calculateTotalPrice();  // Calculate total price whenever nights are updated
        } else {
            document.getElementById("numberOfNights").style.display = "none";
        }
    }

    function calculateTotalPrice() {
        const nights = parseInt(document.getElementById("nightsCount").textContent) || 0;
        const numberOfGuests = parseInt(document.getElementById("numberOfGuests").value) || 0;
        const totalPrice = nights * numberOfGuests * pricePerNight;
        document.getElementById("totalPrice").textContent = totalPrice.toFixed(2);
        document.getElementById("totalCost").style.display = (totalPrice > 0) ? "block" : "none";
    }

    //payment poppup
    function openPaymentModal() {
        const totalPrice = parseFloat(document.getElementById("totalPrice").textContent) || 0;
        const nightsCount = parseInt(document.getElementById("nightsCount").textContent) || 0;
        const daysCount = parseInt(document.getElementById("daysCount").textContent) || 0;
        const checkInDate = document.getElementById("checkInDate").value || "N/A";
        const checkOutDate = document.getElementById("checkOutDate").value || "N/A";


        document.getElementById("modalTotalPrice").textContent = totalPrice
            .toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        document.getElementById("modalNightsCount").textContent = nightsCount;
        document.getElementById("modalDaysCount").textContent = daysCount;
        document.getElementById("modalCheckInDate").textContent = checkInDate;
        document.getElementById("modalCheckOutDate").textContent = checkOutDate;


        const paymentModal = new bootstrap.Modal(document.getElementById("paymentModal"));
        paymentModal.show();
    }



    // Ay ve yıl inputlarını birleştirip tek bir veri haline getirme
    document.getElementById("ExpirationMonth").addEventListener("input", updateExpirationDate);
    document.getElementById("ExpirationYear").addEventListener("input", updateExpirationDate);

    function updateExpirationDate() {
        const month = document.getElementById("ExpirationMonth").value.padStart(2, '0');
        const year = document.getElementById("ExpirationYear").value.padStart(2, '0');

        if (month.length === 2 && year.length === 2) {
            document.getElementById("ExpirationDate").value = `${month}/${year}`;
        }
    }

    // card number için 4 karakterde 1 boşluk
    document.getElementById("CardNumber").addEventListener("input", formatCardNumber);

    function formatCardNumber(event) {
        const input = event.target;
        let value = input.value.replace(/\D/g, '');
        value = value.replace(/(\d{4})(?=\d)/g, '$1 ');
        input.value = value;

        // Form gönderiminde temiz veri için (isteğe bağlı)
        const cleanValue = value.replace(/\s/g, '');
        console.log("Clean Card Number:", cleanValue);
    }

    // Initialize all tooltips
        var tooltipTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        tooltipTriggerList.forEach(function (tooltipTriggerEl) {
            new bootstrap.Tooltip(tooltipTriggerEl)
        })

</script>
