@model IEnumerable<Hotel_Reservation_System.Models.Hotel>

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/css-folder/home-page/index-page.css" rel="stylesheet" type="text/css" />

<div class="homepage-container">
    <h1>ROOMIFY ~ HOTEL RESERVATION SYSTEM</h1>
    <p>⭐ Find your perfect hotel and make reservations with ease!</p>
    <hr />

    <!-- Search bar -->
    <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Discover your perfect stay..." oninput="toggleSearchButton()" />
        <button id="searchButton" onclick="filterHotels()" disabled>Search</button>
        <div class="loading-area" id="loadingMessage" style="display: none;">
            <img src="@Url.Content("~/Content/images/icon/loading.gif")" alt="Loading..." />
            <p>Loading...</p>
        </div>
    </div>

    <div class="hotel-list" id="hotelList">
        <p id="notFoundMessage" style="display: none; text-align: center; font-weight: bold; color: #F92F60;">❌ Oops! The hotel you are looking for could not be found.</p>
        @foreach (var hotel in Model)
        {
            <div class="hotel-card" data-name="@hotel.Name @hotel.Title @hotel.Location @hotel.PricePerNight">
                <a href="@Url.Action("Details", "Hotel", new { id = hotel.Id })">
                    <img src="@Url.Content(hotel.ImageUrl)" alt="@hotel.Name" class="hotel-image" />
                </a>
                <div class="hotel-info">
                    <div class="name-rating">
                        <h2><a href="@Url.Action("Details", "Hotel", new { id = hotel.Id })">@hotel.Name</a></h2>
                        <p>
                            @for (var i = 0; i < hotel.Rating; i++)
                            {
                                <span>★</span>
                            }
                        </p>
                    </div>
                    <div class="title-area">
                        <p>@hotel.Title</p>
                    </div>
                    <div class="location-area">
                        @{
                            var locationParts = hotel.Location.Split(',');

                            string city = "Unknown City";
                            if (locationParts.Length >= 4)
                            {
                                city = locationParts[locationParts.Length - 4].Trim() + ", " + locationParts[locationParts.Length - 5].Trim();
                            }
                        }
                        <p>📍@city</p>
                    </div>
                    <hr />

                    <p><strong>Available Rooms:</strong> @hotel.AvailableRooms</p>
                    <div class="row">
                        <div class="col-md-6"></div>
                        <div class="col-md-6 price-info">
                            <p><del>@(hotel.PricePerNight + 100) ₺</del> @hotel.PricePerNight ₺</p>
                            <div class="text-right">
                                <div class="subtitle-info">
                                    <p>
                                        Price for 1 night <br />
                                        Taxes and fees included.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    let searchTimeout;

    function filterHotels() {
        clearTimeout(searchTimeout);

        document.getElementById("loadingMessage").style.display = "block";

        searchTimeout = setTimeout(() => {
            var input = document.getElementById("searchInput").value.trim().toLowerCase();
            var hotelCards = document.getElementsByClassName("hotel-card");
            let foundAny = false;

            for (var i = 0; i < hotelCards.length; i++) {
                var hotelName = hotelCards[i].getAttribute("data-name").toLowerCase();
                if (hotelName.includes(input)) {
                    hotelCards[i].style.display = "flex";
                    foundAny = true;
                } else {
                    hotelCards[i].style.display = "none";
                }
            }

            document.getElementById("loadingMessage").style.display = "none";

            if (!foundAny) {
                document.getElementById("notFoundMessage").style.display = "block";
            } else {
                document.getElementById("notFoundMessage").style.display = "none";
            }
        }, 2500);
    }

    function toggleSearchButton() {
        const input = document.getElementById("searchInput").value.trim();
        const searchButton = document.getElementById("searchButton");
        searchButton.disabled = input === "";
    }

    document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("searchInput").addEventListener("input", toggleSearchButton);
        toggleSearchButton();
    });
</script>




