@model IEnumerable<Hotel_Reservation_System.Models.Hotel>
@using Hotel_Reservation_System.Models

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/css-folder/home-page/index-hp.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


<div class="homepage-container">
    <h3>Save up to 40% on your next hotel stay!</h3>
    <p>We compare hotel prices from 100s of sites</p>

    <!-- Filter area -->
    <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Where to?" oninput="toggleSearchButton()" />

        <input type="date" id="checkinDate" placeholder="Check-in Date" min="" onchange="validateDates()" />
        <input type="date" id="checkoutDate" placeholder="Check-out Date" min="" onchange="validateDates()" />

        <div class="guest-dropdown">
            <button type="button" id="guestButton" onclick="toggleGuestDropdown()"><span id="guestCount">1 Adult, 0 Child, 1 Room 🡇</span></button>
            <div class="guest-dropdown-content" id="guestDropdown" style="display: none;">
                <div class="guest-type">
                    <span>Adults</span>
                    <button type="button" onclick="decrement('adultCount')">-</button>
                    <span id="adultCount">1</span>
                    <button type="button" onclick="increment('adultCount')">+</button>
                </div>
                <div class="guest-type">
                    <span>Children</span>
                    <button type="button" onclick="decrement('childCount')">-</button>
                    <span id="childCount">0</span>
                    <button type="button" onclick="increment('childCount')">+</button>
                </div>
                <div class="guest-type">
                    <span>Rooms</span>
                    <button type="button" onclick="decrement('roomCount')">-</button>
                    <span id="roomCount">1</span>
                    <button type="button" onclick="increment('roomCount')">+</button>
                </div>
            </div>
        </div>

        <button id="searchButton" onclick="filterHotels()" disabled>Search</button>

        <div class="loading-area" id="loadingMessage" style="display: none;">
            <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
            <p>Loading...</p>
        </div>
    </div>

    <!-- Errors -->
        <p id="notFoundMessage" class="search-bar-error-message"><i class="fa-regular fa-face-frown"></i> Oops! The hotel you are looking for could not be found.</p>
        <p id="errorMessage" class="search-bar-error-message"><i class="fas fa-exclamation-triangle"></i> Check-out date cannot be earlier than or the same as check-in date!</p>

    <div class="partner-logos">
        <a href="https://www.booking.com/index.tr.html" class="logo">
            <img src="@Url.Content("~/Content/images/partners/booking.png")" alt="Booking.com" />
        </a>
        <a href="https://www.expedia.com" class="logo">
            <img src="@Url.Content("~/Content/images/partners/expedia.png")" alt="Expedia" />
        </a>
        <a href="https://tr.hotels.com/" class="logo">
            <img src="@Url.Content("~/Content/images/partners/hotels.png")" alt="Hotels.com" />
        </a>
        <a href="https://www.vrbo.com/" class="logo">
            <img src="@Url.Content("~/Content/images/partners/vrbo.png")" alt="Vrbo" />
        </a>
        <a href="https://all.accor.com/" class="logo">
            <img src="@Url.Content("~/Content/images/partners/accor.png")" alt="Accor" />
        </a>
        <a href="https://tr.trip.com/" class="logo">
            <img src="@Url.Content("~/Content/images/partners/trip.png")" alt="Trip.com" />
        </a>
        <a href="https://www.priceline.com/" class="logo">
            <img src="@Url.Content("~/Content/images/partners/priceline.png")" alt="Priceline" />
        </a>
        <span class="more">+100s more</span>
    </div>


    <div class="filter-container">
        <div class="row">
            <div class="col-md-2 filter-section">
                <h3>Filter by</h3>
                <form>
                    <div class="filter-group">
                        <h4>Popular filters</h4>
                        <label><input type="checkbox" name="spa" /> Spa</label>
                        <label><input type="checkbox" name="wifi" /> Free WI-FI</label>
                        <label><input type="checkbox" name="cityCenter" /> Fethiye</label>
                        <label><input type="checkbox" name="allInclusive" /> All Included</label>
                        <label><input type="checkbox" name="apartHotel" /> Family resort</label>
                    </div>

                    <div class="filter-group">
                        <h4>Price range</h4>
                        <div class="input-container-price-range">
                            <label>Min: <input type="number" id="minPrice" name="minPrice" value="0" /></label>
                            <label>Max: <input type="number" id="maxPrice" name="maxPrice" value="10000" /></label>
                        </div>
                        <div class="range-slider-container">
                            <input type="range"
                                   id="priceMinRange"
                                   min="0"
                                   max="10000"
                                   value="0"
                                   step="100" />
                            <input type="range"
                                   id="priceMaxRange"
                                   min="0"
                                   max="10000"
                                   value="10000"
                                   step="100" />
                        </div>
                    </div>

                    <div class="filter-group">
                        <h4>Stay options</h4>
                        <label><input type="radio" name="accommodation" value="any" checked /> Any</label>
                        <label><input type="radio" name="accommodation" value="hotels" /> Hotels</label>
                        <label><input type="radio" name="accommodation" value="entireHome" /> Homes</label>
                    </div>

                    <div class="filter-group">
                        <h4>Amenities</h4>
                        <div class="button-container-amenities">
                            <button class="feature-button"><i class="fa-solid fa-spa"></i> Spa</button>
                            <button class="feature-button"><i class="fa-solid fa-wifi"></i> Free WI-FI</button>
                            <button class="feature-button"><i class="fa-solid fa-hot-tub-person"></i> Hot tub</button>
                            <button class="feature-button"><i class="fa-solid fa-person-swimming"></i> Pool</button>
                            <button class="feature-button"><i class="fa-solid fa-paw"></i> Pet friendly</button>
                            <button class="feature-button"><i class="fa-solid fa-car"></i> Parking</button>
                            <button class="feature-button"><i class="fa-solid fa-snowflake"></i> Air conditioned</button>
                            <button class="feature-button"><i class="fa-solid fa-dumbbell"></i> Gym</button>
                            <button class="feature-button"><i class="fa-solid fa-utensils"></i> Restaurant</button>
                            <button class="feature-button"><i class="fa-solid fa-martini-glass"></i> Bar</button>
                        </div>
                    </div>

                    <div class="filter-group">
                        <h4>Star rating</h4>
                        <div class="button-container-stars">
                            <button class="feature-button">1 <i class="fa-solid fa-star"></i></button>
                            <button class="feature-button">2 <i class="fa-solid fa-star"></i></button>
                            <button class="feature-button">3 <i class="fa-solid fa-star"></i></button>
                            <button class="feature-button">4 <i class="fa-solid fa-star"></i></button>
                            <button class="feature-button">5 <i class="fa-solid fa-star"></i></button>
                        </div>
                    </div>

                </form>
            </div>


            <div class="col-md-10 hotel-list" id="hotelList">
                @foreach (var hotel in Model)
                {
                    <div class="hotel-card" data-name="@hotel.Name @hotel.Title @hotel.Location" data-price="@hotel.PricePerNight">
                        <div class="card-link-container">
                            <a href="@Url.Action("Details", "Hotel", new { id = hotel.Id })">
                                <img src="@Url.Content(hotel.ImageUrl)" alt="@hotel.Name" class="hotel-image" />
                            </a>

                            <a href="javascript:void(0)" class="wishlist-icon" onclick="document.getElementById('wishlistForm-@hotel.Id').submit();">
                                @{ var currentUserId = Session["UserId"] != null ? (int)Session["UserId"] : 0; }
                                @if (hotel.UsersWhoWishlisted.Any(u => u.Id == currentUserId))
                                {
                                    <i class="fa-solid fa-heart text-danger"></i>
                                }
                                else
                                {
                                    <i class="fa-regular fa-heart"></i>
                                }

                                <form id="wishlistForm-@hotel.Id" action="@Url.Action("ToggleWishlist", "Customer", new { referer = Request.Url.PathAndQuery })" method="post" style="display: none;">
                                    <input type="hidden" name="id" value="@hotel.Id" />
                                </form>
                            </a>
                        </div>
                        <div class="hotel-info">
                            <div class="name-rating">
                                <h2><a href="@Url.Action("Details", "Hotel", new { id = hotel.Id })">@hotel.Name</a></h2>
                                <p>
                                    @for (var i = 0; i < hotel.Rating; i++)
                                    {
                                        <span>★</span>
                                    }
                                </p>
                            </div>
                            <div class="title-area">
                                <p>@hotel.Title</p>
                            </div>
                            <div class="location-area">
                                @{
                                    var locationParts = hotel.Location.Split(',');

                                    string city = "Unknown City";
                                    if (locationParts.Length >= 4)
                                    {
                                        city = locationParts[locationParts.Length - 4].Trim() + ", " + locationParts[locationParts.Length - 5].Trim();
                                    }
                                }
                                <p><i class="fa-solid fa-location-dot"></i> @city</p>
                            </div>
                            <hr />

                            <div class="row">
                                <div class="col-md-4">
                                    @{
                                        var allFacilities = Enum.GetValues(typeof(FacilityHotel))
                                                                 .Cast<FacilityHotel>()
                                                                 .Where(facility => facility != FacilityHotel.None && hotel.Facilities.HasFlag(facility))
                                                                 .ToList();

                                        var randomFacilities = allFacilities.OrderBy(f => Guid.NewGuid()).Take(2);
                                    }
                                    <div class="hotel-facilities">
                                        <ul>
                                            @foreach (var facility in randomFacilities)
                                            {
                                                var displayName = FacilityExtensions.GetEnumDisplayNameHotel(facility);
                                                var iconClass = FacilityIcons.GetHotelIcon(facility);

                                                <li class="facility-area">
                                                    @if (!string.IsNullOrEmpty(iconClass))
                                                    {
                                                        <i class="@iconClass" aria-hidden="true"></i>
                                                    }
                                                    <span>@displayName</span>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                                <div class="col-md-8"></div>
                            </div>


                            <div class="row">
                                <div class="col-md-6"></div>
                                <div class="col-md-6 price-info">
                                    <p><del>@(hotel.PricePerNight + 100) ₺</del> @hotel.PricePerNight ₺</p>
                                    <div class="text-right">
                                        <div class="subtitle-info">
                                            <p>
                                                Price for 1 night <br />
                                                Taxes and fees included.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    let searchTimeout;

    // search-bar-filter
    function filterHotels() {
        clearTimeout(searchTimeout);

        document.getElementById("loadingMessage").style.display = "block";

        searchTimeout = setTimeout(() => {
            var input = document.getElementById("searchInput").value.trim().toLowerCase();
            var hotelCards = document.getElementsByClassName("hotel-card");
            var checkinDate = new Date(document.getElementById("checkinDate").value);
            var checkoutDate = new Date(document.getElementById("checkoutDate").value);
            var adultCount = parseInt(document.getElementById("adultCount").textContent) || 1;
            var childCount = parseInt(document.getElementById("childCount").textContent) || 0;
            var roomCount = parseInt(document.getElementById("roomCount").textContent) || 1;

            let foundAny = false;

            var dayDifference = Math.max(
                (checkoutDate - checkinDate) / (1000 * 60 * 60 * 24),
                0
            );

            for (var i = 0; i < hotelCards.length; i++) {
                var hotelName = hotelCards[i].getAttribute("data-name").toLowerCase();
                var pricePerNight = parseFloat(hotelCards[i].getAttribute("data-price")) || 0;

                var totalPrice =
                    dayDifference *
                    pricePerNight *
                    (adultCount + childCount) *
                    roomCount;

                if (hotelName.includes(input)) {
                    hotelCards[i].style.display = "flex";
                    foundAny = true;

                    var subtitleInfo = hotelCards[i].querySelector(".subtitle-info p");
                    if (subtitleInfo) {
                        subtitleInfo.innerHTML = `
                                                Price for ${dayDifference} night(s): <strong>${totalPrice.toFixed(2)} ₺</strong><br />
                                                Taxes and fees included.
                                            `;
                    }
                } else {
                    hotelCards[i].style.display = "none";
                }
            }

            document.getElementById("loadingMessage").style.display = "none";

            if (!foundAny) {
                document.getElementById("notFoundMessage").style.display = "block";
            } else {
                document.getElementById("notFoundMessage").style.display = "none";
            }
        }, 2500);
    }


    function toggleSearchButton() {
        const input = document.getElementById("searchInput").value.trim();
        const checkinDate = document.getElementById("checkinDate").value;
        const checkoutDate = document.getElementById("checkoutDate").value;
        const searchButton = document.getElementById("searchButton");

        searchButton.disabled = input === "" || !checkinDate || !checkoutDate;
    }

    document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("searchInput").addEventListener("input", toggleSearchButton);
        document.getElementById("checkinDate").addEventListener("change", toggleSearchButton);
        document.getElementById("checkoutDate").addEventListener("change", toggleSearchButton);
        toggleSearchButton();

        const today = new Date().toISOString().split('T')[0];
        const checkinDate = document.getElementById("checkinDate");
        const checkoutDate = document.getElementById("checkoutDate");

        checkinDate.min = today;
        checkoutDate.min = today;
    });

    function validateDates() {
        const checkinDateValue = document.getElementById("checkinDate").value;
        const checkoutDateValue = document.getElementById("checkoutDate").value;
        const errorMessage = document.getElementById("errorMessage");

        if (checkinDateValue && checkoutDateValue) {
            const checkinDate = new Date(checkinDateValue);
            const checkoutDate = new Date(checkoutDateValue);

            if (checkoutDate <= checkinDate) {
                errorMessage.style.display = "block";
                document.getElementById("checkoutDate").value = "";
            } else {
                errorMessage.style.display = "none";
            }
        }
    }

    //adults - children - rooms buttons
    function toggleGuestDropdown() {
        var dropdown = document.getElementById("guestDropdown");
        dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
    }


    function increment(id) {
        var count = document.getElementById(id);
        count.innerText = parseInt(count.innerText) + 1;
        updateGuestCount();
    }

    function decrement(id) {
        var count = document.getElementById(id);
        if (parseInt(count.innerText) > 0) {
            count.innerText = parseInt(count.innerText) - 1;
            updateGuestCount();
        }
    }

    function updateGuestCount() {
        var adults = document.getElementById("adultCount").innerText;
        var children = document.getElementById("childCount").innerText;
        var rooms = document.getElementById("roomCount").innerText;
        document.getElementById("guestCount").innerText = `${adults} Adult${adults > 1 ? 's' : ''}, ${children} Child${children > 1 ? 'ren' : ''}, ${rooms} Room${rooms > 1 ? 's' : ''}`;
    }

    //price-range-by-filter
    const priceMinRange = document.getElementById('priceMinRange');
    const priceMaxRange = document.getElementById('priceMaxRange');
    const minPriceInput = document.getElementById('minPrice');
    const maxPriceInput = document.getElementById('maxPrice');

    priceMinRange.addEventListener('input', () => {
        const min = parseInt(priceMinRange.value);
        const max = parseInt(priceMaxRange.value);

        if (min > max) {
            priceMinRange.value = max;
        }
        minPriceInput.value = priceMinRange.value;
    });

    priceMaxRange.addEventListener('input', () => {
        const min = parseInt(priceMinRange.value);
        const max = parseInt(priceMaxRange.value);

        if (max < min) {
            priceMaxRange.value = min;
        }
        maxPriceInput.value = priceMaxRange.value;
    });

    minPriceInput.addEventListener('input', () => {
        const min = parseInt(minPriceInput.value);
        const max = parseInt(maxPriceInput.value);

        if (min > max) {
            minPriceInput.value = max;
        }
        priceMinRange.value = minPriceInput.value;
    });

    maxPriceInput.addEventListener('input', () => {
        const min = parseInt(minPriceInput.value);
        const max = parseInt(maxPriceInput.value);

        if (max < min) {
            maxPriceInput.value = min;
        }
        priceMaxRange.value = maxPriceInput.value;
    });

</script>




