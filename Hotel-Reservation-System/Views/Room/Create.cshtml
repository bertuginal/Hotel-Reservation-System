@model Hotel_Reservation_System.Models.Room
@using Hotel_Reservation_System.Models

@{
    ViewBag.Title = "Create Room";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/css-folder/room/create-rf.css" rel="stylesheet" type="text/css" />

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card room-card">
        <div class="card-header">
            <p class="room-title">ROOM CREATE PANEL</p>
            <p class="room-info">Enter room details to start creating</p>
        </div>
        <div class="card-body">

            <div class="form-group">
                <div class="section profile-section">
                    <div class="profile-picture">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "form-label" })
                            <input type="file" name="roomImage" class="form-control" />
                            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="profile-info">
                        <p>Upload Room Image</p>
                        <span>PNG, JPEG under 15MB</span>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.Label("Hotel The Room Belongs To*", htmlAttributes: new { @class = "form-label" })
                        @Html.DropDownList("HotelId", null, "Select a Hotel ▼", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.HotelId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Type, (SelectList)ViewBag.RoomTypes, "Select Room Type ▼", new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", placeholder = "Customer Capacity" } })
                    @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.NumberOfRooms, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.NumberOfRooms, new { htmlAttributes = new { @class = "form-control", placeholder = "Total Rooms" } })
                    @Html.ValidationMessageFor(model => model.NumberOfRooms, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.PricePerNight, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.PricePerNight, new { htmlAttributes = new { @class = "form-control", placeholder = "₺" } })
                    @Html.ValidationMessageFor(model => model.PricePerNight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.SquareMeters, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.SquareMeters, new { htmlAttributes = new { @class = "form-control", placeholder = "m²" } })
                    @Html.ValidationMessageFor(model => model.SquareMeters, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">

                </div>
            </div>

            <div class="form-group">
                <div class="facility-group">
                    @foreach (FacilityRoom facility in (List<FacilityRoom>)ViewBag.Facilities)
                    {
                        var facilityValue = (int)facility;
                        var displayName = FacilityExtensions.GetEnumDisplayNameRoom(facility);
                        <div class="form-check">
                            <input type="checkbox"
                                   name="SelectedFacilities"
                                   value="@facilityValue"
                                   id="facility-@facilityValue"
                                   class="facility-checkbox @((facility == FacilityRoom.None) ? "facility-none" : "")"
                                   @(facility == FacilityRoom.None ? "checked" : "") />
                            <label for="facility-@facilityValue" class="form-check-label">@displayName</label>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4, placeholder = "Enter some details" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="card-footer">
            <input type="submit" value="Create" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    //facility-none
    document.addEventListener("DOMContentLoaded", function () {
        const noneCheckbox = document.querySelector(".facility-none");
        const allCheckboxes = document.querySelectorAll(".facility-checkbox");

        noneCheckbox.addEventListener("change", function () {
            if (noneCheckbox.checked) {
                allCheckboxes.forEach(cb => {
                    if (!cb.classList.contains("facility-none")) {
                        cb.checked = false;
                        cb.disabled = true;
                    }
                });
            } else {
                allCheckboxes.forEach(cb => {
                    if (!cb.classList.contains("facility-none")) {
                        cb.disabled = false;
                    }
                });
            }
        });

        allCheckboxes.forEach(cb => {
            if (!cb.classList.contains("facility-none")) {
                cb.addEventListener("change", function () {
                    if (cb.checked) {
                        noneCheckbox.checked = false;
                    }
                });
            }
        });
    });
</script>