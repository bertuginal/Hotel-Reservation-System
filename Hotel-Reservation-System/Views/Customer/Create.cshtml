@model Hotel_Reservation_System.Models.Customer

@{
    ViewBag.Title = "Create Customer";
}

<link href="~/Content/css-folder/account/customer/create-cc.css" rel="stylesheet" type="text/css" />

@using (Html.BeginForm("Create", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h2>CUSTOMER CREATE PANEL</h2>
    <h4>Enter customer details to start creating</h4>

    <br />

    <p class="info-text">Personal Information</p>
    <hr />

    <div class="section profile-section">
        <div class="profile-picture">
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-6" })
                <input type="file" name="profilePicture" class="form-control" />
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="profile-info">
            <p>Upload Profile Photo</p>
            <span>PNG, JPEG under 15MB</span>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Surname" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
            @Html.LabelFor(model => model.AreaCode, htmlAttributes: new { @class = "control-label" })
            <select id="AreaCode" name="AreaCode" class="form-control">
                <option value="" disabled selected>Select Area Code ⏷</option>
                @if (ViewBag.AreaCodeName != null)
                {
                    foreach (var areaCode in (List<string>)ViewBag.AreaCodeName)
                    {
                        <option value="@areaCode">@areaCode</option>
                    }
                }
                else
                {
                    <option value="" disabled>No area codes available</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.AreaCode, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-9">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Contact Number" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <p class="info-text">Account Information</p>
    <hr />


    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "E-mail address" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.Password, new { @class = "control-label" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6">
            @Html.Label("Confirm Password*", new { @class = "control-label" })
            <input type="password" name="ConfirmPassword" class="form-control" placeholder="Confirm Password" />
            @if (ViewBag.PasswordMismatch != null)
            {
                <span class="text-danger">@ViewBag.PasswordMismatch</span>
            }
        </div>
    </div>

    <p class="info-text">Address Information</p>
    <hr />

    <div class="form-group row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
            <select id="Country" name="Country" class="form-control">
                <option value="" disabled selected>Select Country ⏷</option>
                @if (ViewBag.CountryName != null)
                {
                    foreach (var country in (List<string>)ViewBag.CountryName)
                    {
                        <option value="@country">@country</option>
                    }
                }
                else
                {
                    <option value="" disabled>No countries available</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
            <select id="City" name="City" class="form-control">
                <option value="" disabled selected>Select City ⏷</option>
                @if (ViewBag.CityName != null && ((List<string>)ViewBag.CityName).Count > 0)
                {
                    foreach (var city in (List<string>)ViewBag.CityName)
                    {
                        <option value="@city">@city</option>
                    }
                }
                else
                {
                    <option value="" disabled>No cities available</option>
                }
            </select>

            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Postal Code" } })
            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            <!-- Tam genişlik için col-md-12 -->
            @Html.TextAreaFor(model => model.Address, new { @class = "form-control address-area", rows = 4, placeholder = "Full Address" })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-12 button-actions">
            <input type="submit" value="Create" class="btn btn-success" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-cancel" })
        </div>
    </div>
</div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#Country').change(function () {
            var selectedCountry = $(this).val(); // Seçilen ülkeyi al

            if (selectedCountry) {
                $.ajax({
                    url: '@Url.Action("GetCitiesByCountry", "Customer")',
                    type: 'GET',
                    data: { countryName: selectedCountry },
                    success: function (cities) {
                        // Şehir dropdown'ını temizle
                        $('#City').empty();
                        $('#City').append('<option value="" disabled selected>Select City ⏷</option>');

                        // Gelen şehirleri dropdown'a ekle
                        $.each(cities, function (index, city) {
                            $('#City').append('<option value="' + city + '">' + city + '</option>');
                        });
                    },
                    error: function () {
                        alert('Failed to retrieve cities. Please try again.');
                    }
                });
            } else {
                // Eğer hiçbir ülke seçilmediyse, şehir dropdown'ını temizle
                $('#City').empty();
                $('#City').append('<option value="" disabled selected>Select City ⏷</option>');
            }
        });
    });
</script>
